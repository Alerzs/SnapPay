django-admin startproject name
python manage.py runserver
python manage.py startapp name




------------DATA BASE-------------

data base haye sql be soorat jadvali save mishe

baraye link kardann dota table mitavan dar khane haye yek jadval pk jadval dige ro gozasht ke be oon FK migooyand (forigen key)
terminal
pk   name     adres   open time
1    str       str      time
2    str       str      time

ticket 
pk      title   price       sorce          des         time
1        str     int     fk(terminal)   fk(terminal)   time
2        str     int     fk(terminal)   fk(terminal)   time
3        str     int     fk(terminal)   fk(terminal)   time

customer
pk     name     ticket       phone
1      ali    fk ticket 2     ----
2      mqod   fk ticket 3     ----
3      ali    fk ticket 3     ----

mitavan az yek table n ta fk be table digar vasl kard

file model ------> database


python manage.py makemigrations --------------taghirat ro payda mikone 
python manage.py migrate  ----------------------taghir ro emal mikone baraye sakht database

python manage.py createsuperuser   -----------sakht user admin baraye manage

baraye didan db dar admin site bayad dar file admin dastoor
from django.contrib.admin import register , ModelAdmin
from payment.models import (chizaee ke mikhaym)

@register(chiz)
class chizAdmin(ModelAdmin):
    pass


=======================================================================================================================================

many to many relation:

rabete student va class mtm ast 
rabete teacher va class mtm ast
student <----> class <----> teacher

dar hengam sakht yek rabete many to many yek jadval jadid dorost mishe ke toosh dota field dare ke do samt rabete ast
masalan dar teacher to class yek jadval jadid ba do field class va teacher sakhte mishe ke dar har khane p.k har kodam nagah dashte mishavad

pk     teacher        class
1         1             2
2         1             3
3         2             2
4         2             4


one to one relation:

rabete person va student yek rabete one to one ast 
yani har person yek student ast va har student yek person ast
shekl in rabete mesl fk ast ba in tafavot ke dar har sotoon nemitavn pk tekrari dashte

pk       person        level
1           5            -
2           2            -
3           3            -
4           1            -


radif person pk tekrari nadarad

=======================================================================================================================================
virtual enviroment:

python -m venv name
=======================================================================================================================================
file haye __pycache__ , env/* , *.sqlite3 , .env nabayd dakhel git bere va bayad dakhel file .gitignore ezafe shavad

=======================================================================================================================================
baraye etesal postgresql az ketabkhane psycopg2 estefade mikonim
dakhel setting database ro as defult ke sqlite3 ast jelo ebarat  Engine backend ebarat "postpresql_psycopg2" ro benevisim
sepas yek NAME , USER ,PASSWORD , HOST , PORT ziresh add mikonim

ba pg admin yek db jadid misazim va name oon ro dar NAME vared mikonim
USER pishfarz postgre ast
PASSWORD hengam nasb postgre : 1234
HOST local host ya 127.0.0.1
PORT 5432

=======================================================================================================================================
baraye add kardan html yek folder media / template misazim
media / assets baraye css ast

dar setting bakhsh templates bakhsh DIRS os.path.join(BASE_DIR , "media/template") ra vared mikonim

dar bakh views from django.shortcuts import render
dar yek tabe bakhsh views return render(request ,adress file dar pooshe template)
========================================================================================================================================
HTTP

method haye request http:

GET : etelat az karbar migirim
POST : etelat be server midim
DELETE : etelat ro az server hazf mikone
PUT : update kardan kol filed etelat
PATCH : update kardan yek field

method ha be hamrah url dar header http gharar dare

GET va DELETE body nadaran 
dar POST etelat ke mikhaym be server montaghel beshe dar body bashe
etelat dakhel body ba format json ersal mishe

barye check kardan method request as request.method estefade mishe

========================================================================================================================================

from django.db import transaction

with transaction.atomic():
    code1
    code2
    cdoe3

agar har marhale az 3 khat code eror bede ya anjam nashe ghabliya reset mishe


========================================================================================================================================

baraye in ke chan ta request posh ham biyad va barname ta zaman ejraye req ghabli soragh badi nare as .select_for_update() estefade mikonim
dar hengam object giri az in dastoor estefade mikonim

my_costumer = costumer.wallet.select_for_update().get()

=========================================================================================================================================

REST API yek standard baraye api ast 
baraye moshakhas kardan noe request az ketabkhane requests estefade mikonim

requests.get(url , header={key:val})
requests.post()
.....

ba estefaade az ketabkhane rest framework mitavan tamam in kar haro be soorat sade anjam dad
baraye add kardan rest framework bayad oon ro dakhel INSTALLED APP ezafe konim 'rest_frameword'

baraye moratab kardan data (tabdil dade be json) dar har app yek file serializer.py dorost mikonim
++++++++++++++++
from .model import Ticket
from rest_frameword.serializer import Modelserializer
class Ticketserializer(Modelserializer):
    class Meta:
        model = Ticket
        fileds = '__all__'     ya     dar yek list filed haye mored nazar ro migim      ya     ba exclude chanta ro hazf mikonim

+++++++++++++++++
dar view:

from .serializer import Ticketserializer
from rest_frameword.generics import ListAPIView

class TicketList(ListAPIView):   #----------data haro be soorat list barmigardoone va az method get estefade mikone
    queryset = Ticket.object.all()
    serializer_class = Ticketserializer

+++++++++++++++++
dar urls:

from .view import TicketList

path('list' , TicketList.as_view)

RetriveAPIView methodesh get ast va mesl ListAPIView ast faghat dar url yek id migirad va faghat oon boject ro barmigardoone   <int:pk>
CreatAPIView az method post estefade mikone va ba dadan field haye gofte shode dar serializer ro dar body method post bedim yek object jadid Modelserializer
DestroyAPIView methodesh delete ast va mesl retrive dakhel url behesh id midim ke oono delete kone delete kol object ro pak mikone
UpdateAPIView az method put estefade mishe ke put hame field haro migire vali patch faghat yek field migire mesl ghabliya yek id dar url migire
va dar body field haye mord nazar baraye taghir ro minevisim 

ListCreatAPIView tarkibi az creat va list apiview ast agar methodemoon get bashe list mikone va agar post bezanim creat mikone
RetriveUpdateDestroyAPIView az tarkib retrive va update va delete dorost shode agar method get bashe retrive mikone agar method delete bashe delete 
va agar put ya patch bashe update mikone

========================================================================================================================================
dar hengam sabt nam yek token ke yek reshte toolani ast generate mishavad va dar moroorgar save mishe va karbar ro ba oon mishnase

baraye estefade az oon az ketabkhoone simple_jwt estefade mikonim
code zir ro dar setting ezafe mikonim 
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

va dar installed app 'rest_framework_simplejwt', ro ezafe mikonim

++++++++++++++++++++
from django.contrib.auth.models import USER



+++++++++++++++++++++
dar view :
from rest_framework_simplejwt.view import TokenObtainPairView


class Login(TokenObtainPairView):
    pass

bad az post kardan user va pass do token refresh va access barmigardoone ke expier date access kamtar ast va refresh karesh ine ke bad az expire 
shodan access refresh yek token jadid misaze

baraye anjam refresh gereftan va access dadan az  rest_framework_simplejwt.view  RefreshTokenView ro faramikhoonim va dar kelas jadid add mikonim

class Refresh(RefreshTokenView):
    pass

in kar bayad tavasot front handle shavad


